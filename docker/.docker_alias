

# Docker
alias dk="docker"
alias dkl="docker logs"
alias dklf="docker logs -f"
alias dki="docker images"
alias dks="docker service"
alias dkrm="docker rm"
# alias dm= "docker-machine"
# alias dmx="docker-machine ssh"

alias docker-compose="docker compose"
alias dks="docker stats --all --no-trunc"
alias dkr="docker compose run --rm web"

# alias dke="docker exec -it"

alias dkcnthosts="docker ps --filter status=running --quiet | wc -l"
alias dkcntnets="docker network ls --filter driver=bridge --quiet | wc -l"

alias dkflush="docker rm `docker ps --no-trunc -aq`"
alias dkflushi="docker rmi $(docker images --filter "dangling=true" -q --no-trunc)"

alias dkt='docker stats --format "table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}"'
alias dkps="docker ps --format '{{.ID}} ~ {{.Names}} ~ {{.Status}} ~ {{.Image}}'"


dke() {
  docker exec -it $1 /bin/sh
}

dkexe() {
  docker exec -it $1 $2
}

dkln() {
  docker logs -f `docker ps | grep $1 | awk '{print $1}'`
}

dkprune() {
  docker system prune -af
}

dkstate() {
  docker inspect $1 | jq .[0].State
}

dkstats() {
  if [ $# -eq 0 ]
    then docker stats --no-stream;
    else docker stats --no-stream | grep $1;
  fi
}

dktop() {
  docker stats --format "table {{.Container}}\t{{.Name}}\t{{.CPUPerc}}  {{.MemPerc}}\t{{.NetIO}}\t{{.BlockIO}}"
}

alias dknets() {
  docker network inspect --format='{{.Name}} {{.IPAM.Config}}' $(docker network ls --filter driver=bridge --quiet | awk '{print $1}')
}

dktest-nets() {
  for i in {1..50}; do docker network create net-$i; done
  for i in $(docker network ls -q); do
    docker network inspect --format='{{.Name}} {{.IPAM.Config}}' $i;
  done
  for i in {1..50}; do docker network rm net-$i; done
}
