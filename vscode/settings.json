{
  // My Customizations dddd
  "telemetry.enableTelemetry": false, // custom
  "telemetry.enableCrashReporter": false, // custom
  "editor.fontLigatures": true, // custom
  "editor.formatOnSaveMode": "file", // custom
  "editor.formatOnSave": true, // custom
  "editor.codeActionsOnSave": {
    "source.organizeImports": true // custom
  },
  "python.analysis.typeCheckingMode": "strict", // custom
  "python.formatting.provider": "black", // custom
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": true,
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": true,
  "window.title": "${remoteName}${separator}${activeEditorMedium}${separator}${rootPath}", // custom
  "window.zoomLevel": 0, // cust: might have to change per machine
  "workbench.colorTheme": "Cobalt2", // custom
  // #######################
  // Extension settings
  "macros": {
    "commentDown": [
      "editor.action.copyLinesDownAction",
      "cursorUp",
      "editor.action.addCommentLine",
      "cursorDown"
    ]
  },
  "emmet.triggerExpansionOnTab": true,
  "git.path": "/Library/Developer/CommandLineTools",
  "python.pythonPath": "/usr/local/bin/python3",
  "editor.maxTokenizationLineLength": 2000,
  "editor.fontFamily": "'Cascadia Code', 'Fira Code', Menlo, Monaco, 'Courier New', monospace",
  "better-comments.highlightPlainText": true,
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#FF2D00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "//",
      "color": "#474747",
      "strikethrough": true,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "todo",
      "color": "#FF8C00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    }
  ],
  // Columns at which to show vertical rulers
  "editor.rulers": [
    {
      "column": 80,
      "color": "#424142"
    },
    {
      "column": 90
    },
    {
      "column": 110,
      "color": "#ff0000"
    }
  ],
  "files.trimTrailingWhitespace": true,
  "files.trimFinalNewlines": true,
  "files.insertFinalNewline": true,
  "python.languageServer": "Pylance",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "explorer.confirmDragAndDrop": false,
  "redhat.telemetry.enabled": false,
  "vscode-yaml-sort.emptyLinesUntilLevel": 1,
  "vscode-yaml-sort.noCompatMode": true,
  "vscode-yaml-sort.customSortKeywords_1": [
    "version",
    "volumes",
    "networks",
    "secrets",
    "services",
    "services.<name>",
    "services.<name>.depents_on",
    "services.<name>.security_opts"
  ],
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "advancedNewFile.convenienceOptions": [
    "last",
    "current",
    "root"
  ],
  "folderTemplates.fileTemplates": {
    "Typescript Functional Component": [
      "import React from 'react';",
      "",
      "interface <FTName>Props {",
      "}",
      "",
      "const <FTName> = (props) => {",
      "  return <div/>;",
      "};",
      "",
      "export default <FTName>;"
    ],
    "Ansible Config": [
      "[defaults]",
      "inventory = inventory/hosts",
      "roles_path = roles",
      "; log_path = /var/log/ansible.log",
      "log_path = logs/ansible.log",
      "retry_files_enabled = False"
    ],
    "YAML File": [
      "---",
      ""
    ],
    "Ansible - Tasks - Main": [
      "---",
      "# Load distro-specific variables",
      "- name: import vars",
      "  block:",
      "    - include_vars: '{{ ansible_distribution }}.yaml'",
      "  tags: always",
      "",
      "# Task list for roles/<<rolename>>",
      "#- name: import tasks",
      "#  block:",
      "#    - import_tasks: <taskfile>.yaml"
    ],
    "Ansible - Handlers - Main": [
      "---",
      "# Handlers list for roles/<<rolename>>",
      "#- name: import and run tasks",
      "#  block:",
      "#    - import_tasks: <taskfile>.yaml"
    ]
  },
  "folderTemplates.structures": [
    {
      "name": "Ansible - All",
      // "customVariables": ["CustomVar", "CustomVar2"],
      "omitParentDirectory": true,
      "omitFTName": true,
      "overwriteExistingFiles": "never",
      "structure": [
        {
          "fileName": "ansible.cfg",
          "template": "Ansible Config"
        },
        {
          "fileName": "inventory/hosts"
        },
        {
          "fileName": "group_vars/main.yaml",
          "template": "YAML File"
        },
        {
          "fileName": "host_vars/main.yaml",
          "template": "YAML File"
        },
        {
          "fileName": "host_vars/site.yaml",
          "template": "YAML File"
        },
        {
          "fileName": "logs",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "roles",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "roles/role1/files",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "roles/role1/handlers/main.yaml",
          "template": "Ansible - Handlers - Main"
        },
        {
          "fileName": "roles/role1/tasks/main.yaml",
          "template": "Ansible - Tasks - Main"
        },
        {
          "fileName": "roles/role1/templates",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "roles/role1/vars",
          "template": "EmptyDirectory"
        }
      ]
    },
    {
      "name": "Ansible - New Role",
      // "customVariables": ["RoleName"],
      "omitParentDirectory": true,
      "overwriteExistingFiles": "never",
      "structure": [
        {
          "fileName": "<FTName | lowercase>/defaults/main.yaml",
          "template": "YAML File"
        },
        {
          "fileName": "<FTName | lowercase>/files",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "<FTName | lowercase>/handlers/main.yaml",
          "template": "Ansible - Handlers - Main"
        },
        {
          "fileName": "<FTName | lowercase>/meta/main.yaml",
          "template": "YAML File"
        },
        {
          "fileName": "<FTName | lowercase>/tasks/main.yaml",
          "template": "Ansible - Tasks - Main"
        },
        {
          "fileName": "<FTName | lowercase>/templates",
          "template": "EmptyDirectory"
        },
        {
          "fileName": "<FTName | lowercase>/vars/main.yaml",
          "template": "YAML File"
        }
      ]
    }
  ],
  "yaml.customTags": [
    "!encrypted/pkcs1-oaep scalar",
    "!vault scalar"
  ],
  "ansible.validate.executablePath": "",
  "ansible.ansibleLint.path": "~/Library/Python/3.9/bin/ansible-lint",
  "ansible.ansible.path": "~/Library/Python/3.9/bin/ansible",
  "markdown.styles": [
    "https://use.fontawesome.com/releases/v5.7.1/css/all.css"
  ],
  // The number of spaces a tab is equal to. This setting is overriden based on the file contents when `editor.detectIndentation` is on.
  "editor.tabSize": 2,
  // When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.
  "editor.detectIndentation": false,
  "yaml.format.printWidth": 110,
  "workbench.iconTheme": "vscode-icons"
}
